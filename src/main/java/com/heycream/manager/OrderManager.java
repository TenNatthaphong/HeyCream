package com.heycream.manager;

import com.heycream.actor.Customer;
import com.heycream.model.Cup;
import com.heycream.model.Order;
import com.heycream.utils.Randomizer;

/**
 * OrderManager ‚Äî ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠, ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á, ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü
 */
public class OrderManager {

    private int totalServes = 0;   // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ó‡∏±‡πâ‡∏á‡∏ñ‡∏π‡∏Å‡πÅ‡∏•‡∏∞‡∏ú‡∏¥‡∏î)
    private int correctServes = 0; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏ñ‡∏π‡∏Å
    private int totalOrders = 0;   // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á (‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô spawn customer)

    public OrderManager() {}

    // =========================================================
    // üîπ Generate random order (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏£‡∏ß‡∏°)
    // =========================================================
    public Order generateOrder() {
        totalOrders++;
        return Randomizer.randomOrder();
    }

    // =========================================================
    // üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ player ‡∏ó‡∏≥‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å‡πÑ‡∏´‡∏°
    // =========================================================
    public boolean checkMatch(Cup servedCup, Order requested) {
        if (requested == null || servedCup == null) return false;
        boolean result = requested.checkMatch(servedCup);
        recordServe(result);
        return result;
    }

    // =========================================================
    // üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü
    // =========================================================
    public void recordServe(boolean correct) {
        totalServes++;
        if (correct) correctServes++;
    }

    // =========================================================
    // üîπ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á (‡∏°‡∏µ scoop ‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)
    // =========================================================
    public boolean canServe(Cup prepared) {
        if (prepared == null) return false;
        if (prepared.getType() == null) return false;
        if (prepared.getSize() == null) return false;

        int required = prepared.getSize().getMaxScoops();
        return prepared.getScoops() != null && prepared.getScoops().size() >= required;
    }

    // =========================================================
    // üîπ Getters ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö popup / summary
    // =========================================================
    public int getTotalServeCount() { return totalServes; }
    public int getCorrectServeCount() { return correctServes; }
    public int getTotalOrderCount() { return totalOrders; }

    // =========================================================
    // üîπ Reset ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ (‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà)
    // =========================================================
    public void resetStats() {
        totalServes = 0;
        correctServes = 0;
        totalOrders = 0;
    }

    // =========================================================
    // üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏â‡∏û‡∏≤‡∏∞ (‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÑ‡∏î‡πâ)
    // =========================================================
    public boolean isOrderCorrect(Cup playerCup, Customer customer) {
        if (playerCup == null || customer == null) return false;
        Order order = customer.getOrder();
        if (order == null) return false;
        boolean correct = order.checkMatch(playerCup);
        recordServe(correct);
        return correct;
    }
}
